AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: API Gateway Sample
Parameters:
  LambdaRole:
    Type: String
    Default: role-lambdaexec
Resources:
  APIGatewayRestApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: api_gateway
  APIGatewayResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId:
        Ref: APIGatewayRestApi
      ParentId:
        Fn::GetAtt:
        - APIGatewayRestApi
        - RootResourceId
      PathPart: target_lambda
  APIGatewayMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri:
          Fn::Join:
          - ''
          - - Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path
            - Fn::Sub: '/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:'
            - Fn::Sub: ${AWS::AccountId}:function:${TargetLambdaFunction}/invocations
      MethodResponses:
      - StatusCode: 200
      ResourceId:
        Ref: APIGatewayResource
      RestApiId:
        Ref: APIGatewayRestApi
  APIGatewayDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn:
    - APIGatewayMethod
    Properties:
      RestApiId:
        Ref: APIGatewayRestApi
      StageName: test
      StageDescription:
        DataTraceEnabled: true
        LoggingLevel: ERROR
        MetricsEnabled: true
        TracingEnabled: true
  APIGatewayLambdaInvokeRole:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Ref: TargetLambdaFunction
      Principal: apigateway.amazonaws.com
  TargetLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://stack-deploy-bucket/3fdedbff5587103c3c4c4ae60b5ad770
      FunctionName: target_lambda
      Handler: target_lambda.lambda_handler
      MemorySize: 128
      Role:
        Fn::Sub: arn:aws:iam::${AWS::AccountId}:role/${LambdaRole}
      Runtime: python3.8
      Timeout: 900
      Tracing: Active
      Environment:
        Variables:
          Key: Value
  LambdaDurationAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
      - Ref: SNSTopic
      AlarmDescription:
        Fn::Sub: This is the Duration alarm for ${TargetLambdaFunction}
      AlarmName:
        Fn::Sub: ${TargetLambdaFunction}Duration
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
      - Name: FunctionName
        Value:
          Ref: TargetLambdaFunction
      EvaluationPeriods: 1
      MetricName: Duration
      Namespace: AWS/Lambda
      Period: 600
      Statistic: Average
      Threshold: 5
  APIGatewayLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Sub: API-Gateway-Execution-Logs_${APIGatewayRestApi}/test
  TargetLambdaFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${TargetLambdaFunction}
  SNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: SNSTopic
  SNSSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: yoshinari0220@icloud.com
      Protocol: email
      TopicArn:
        Ref: SNSTopic
